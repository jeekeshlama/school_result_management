@model FiboSchool.Src.ViewModel.StudentViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Index";
    int SN = 1;
}
@inject FiboSchool.InfraStructure.Repository.IClassSetupRepository _classRepo;
@inject FiboAddress.InfraStructure.Repository.IDistrictRepository _districtRepo;
@inject FiboAddress.InfraStructure.Repository.IProvienceRepository _provinceRepo;
@inject FiboAddress.InfraStructure.Repository.ILocalLevelRepository _localLevelRepo;
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
         <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="breadcome-list">
                            <div class="row">
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    <div class="breadcome-heading">

                                    </div>
                                </div>
                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                                    <ul class="breadcome-menu">
                                        <li>
                                            <a href="#">Home</a> <span class="bread-slash">/</span>
                                        </li>
                                        <li>
                                            <span class="bread-blod">Student </span>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        <div class="sparkline13-list" style="margin-left:90px;">
            <div class="sparkline13-hd">
                <div class="main-sparkline13-hd">
                    <h1>Student <span class="table-project-n">Data</span> List</h1>
                </div>
            </div>
            <div class="sparkline13-graph">
                <div class="datatable-dashv1-list custom-datatable-overright">
                    <div id="toolbar">
                        <select class="form-control dt-tb">
                            <option value="">Export Basic</option>
                            <option value="all">Export All</option>
                            <option value="selected">Export Selected</option>
                        </select>
                    </div>
                    <div style="float:right">
                        
                        <a asp-action="Create" asp-controller="Student"><i class="fa fa-plus" style="margin-left:800px;">Add Student</i></a>
                    </div>
                    <table id="table" data-toggle="table" data-pagination="true" data-search="true" data-show-columns="true" data-show-pagination-switch="true" data-show-refresh="true" @*data-key-events="true" data-show-toggle="true" data-resizable="true" data-cookie="true"*@
                           data-cookie-id-table="saveId" data-show-export="true" data-click-to-select="true" data-toolbar="#toolbar">
                        <thead>
                            <tr>
                                <th>SN</th>
                                <th>Admission No </th>
                                <th>Name</th>
                                <th>Class</th>
                                <th>Sex</th>
                                <th>Mobile Number</th>
                                <th>Address</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Students)
                            {
                                var classSetup = await _classRepo.GetByIdAsync((long)item.ClassSetupId);
                                var province = await _provinceRepo.GetByIdAsync((long)item.ProvienceId);
                                var district = await _districtRepo.GetByIdAsync((long)item.DistrictId);
                                var locallevel = await _localLevelRepo.GetByIdAsync((long)item.LocalLevelId);
                                <tr>
                                    <td>@SN</td>
                                    <td>@item.Admission</td>
                                    <td>@item.Name</td>
                                    <td>@classSetup.Name</td>
                                    <td class="datatable-ct">
                                        <span class="pie">
                                            @if (item.Gender == 1)
                                            {
                                                <label>Male</label>
                                            }
                                            else
                                            {
                                                <label>Female</label>
                                            }
                                        </span>
                                    </td>
                                    <td>@item.MobileNumber</td>
                                    <td>@item.Address</td>

                                    <td>
                                        <a type="button" asp-action="Update" asp-controller="Student" asp-route-id="@item.Id" class="pd-setting-ed btn"><i class="fa fa-pencil-square-o" data-toggle="tooltip" title="Edit" aria-hidden="true"></i></a>
                                        <button data-toggle="modal" StudentId="@item.Id" data-target="#myModal" class="pd-setting-ed"><i class="fa fa-trash" data-toggle="tooltip" title="Trash" aria-hidden="true"></i></button>

                                    </td>
                                </tr>
                                SN++;
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="custom-pagination">
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        <li class="page-item"><a class="page-link" href="#">Previous</a></li>
                        <li class="page-item"><a class="page-link" href="#">1</a></li>
                        <li class="page-item"><a class="page-link" href="#">2</a></li>
                        <li class="page-item"><a class="page-link" href="#">3</a></li>
                        <li class="page-item"><a class="page-link" href="#">Next</a></li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>


<div class="modal" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md" id="DeleteBody">

        <!-- /.modal-content -->
    </div>
</div>

@section Scripts
    {
    <script type="text/javascript">
        $("#myModal").on('show.bs.modal', function(ke
        ) {
            const officeId = $(ke.relatedTarget).attr('StudentId');

            var url = '@Url.Action("Delete", "Student")' + "?Id=" + officeId;
            if (officeId > 0) {
                $("#DeleteBody").load(url, function() {

                    $("#myModal").modal('show');
                });
            }
            else {
                $("#myModal").modal('hide');
            }
        })

    </script>
   @if (ViewBag.Message != null)
{
    <script type="text/javascript">
    'use strict';
    $(window).on('load', function () {
        function notify(message,type) {
            $.growl({
                message: message
            }, {
                type: type,
                allow_dismiss: false,
                label: 'Cancel',
                className: 'btn-xs btn-inverse',
                placement: {from: 'top', align: 'right'},
                delay: 2500,
                animate: { enter: 'animated rotateIn', exit: 'animated rotateIn'},
                offset: {x: 30,y: 30}
            });
        };
        notify('@ViewBag.Message','success');
    });
    </script>
}

 

@if (ViewBag.Messege != null)
{
    <script type="text/javascript">
    'use strict';
    $(window).on('load', function () {
        function notify(messege,type) {
            $.growl({
                message: messege
            }, {
                type: type,
                allow_dismiss: false,
                label: 'Cancel',
                className: 'btn-xs btn-inverse',
                placement: {from: 'top', align: 'right'},
                delay: 2500,
                animate: { enter: 'animated rotateIn', exit: 'animated rotateIn'},
                offset: {x: 30,y: 30}
            });
        };
        notify('@ViewBag.Messege','danger');
    });
    </script>
}
}
